package lq2007.plugins.gradle_plugin.support;

import com.github.javaparser_new.ast.CompilationUnit;
import com.github.javaparser_new.ast.body.TypeDeclaration;
import com.github.javaparser_new.ast.nodeTypes.NodeWithAnnotations;

import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.*;
import static java.lang.annotation.ElementType.PARAMETER;
import static java.lang.annotation.RetentionPolicy.SOURCE;

/**
 * Mark the element is generated by generator
 */
@Retention(SOURCE)
@Target({PACKAGE, TYPE, ANNOTATION_TYPE, METHOD, CONSTRUCTOR, FIELD,
        LOCAL_VARIABLE, PARAMETER})
public @interface Generated {

    /**
     * Generator
     * @return usually the generator's class name.
     */
    String generator();

    /**
     * Generator version
     * @return version
     */
    int version();

    /**
     * Other generated parameters
     * <p>You can write like "a=b" and use {@link PluginHelper#getGeneratedInformation(NodeWithAnnotations, TypeDeclaration, CompilationUnit)}
     * to parse them to a map</p>
     * @return parameters
     */
    String[] parameters() default {};
}
